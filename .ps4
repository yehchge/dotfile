# To install it add this lines to your .bashrc or to the global bashrc
# I have avoided non UTF-8 characters 
# This is a modified version of this gist: https://gist.github.com/ckabalan/2732cf6368a0adfbe55f03be33286ab1

function set_bash_prompt () {
  # Color codes for easy prompt building
  COLOR_DIVIDER="\[\e[30;1m\]"
  COLOR_CMDCOUNT="\[\e[34;1m\]"
  COLOR_USERNAME="\[\e[34;1m\]"
  COLOR_USERHOSTAT="\[\e[34;1m\]"
  COLOR_HOSTNAME="\[\e[34;1m\]"
  COLOR_GITBRANCH="\[\e[33;1m\]"
  COLOR_VENV="\[\e[33;1m\]"
  COLOR_GREEN="\[\e[32;1m\]"
  COLOR_PATH_OK="\[\e[32;1m\]"
  COLOR_PATH_ERR="\[\e[31;1m\]"
  # otherwise it does not fit into my dark color scheme. The divider would be invisible
  COLOR_DIVIDER=$COLOR_PATH_OK
  COLOR_NONE="\[\e[0m\]"
  # change the path color based on return value.
  if test $? -eq 0 ; then
    PATH_COLOR=${COLOR_PATH_OK}
  else
    PATH_COLOR=${COLOR_PATH_ERR}
  fi

  PS1="${COLOR_DIVIDER}[${COLOR_CMDCOUNT}\#${COLOR_DIVIDER}"
  # check if git is installed
  git --version 2>&1 >/dev/null
  GIT_IS_AVAILABLE=$?
  if [ ${GIT_IS_AVAILABLE} -eq 0 ]; then
    # Git is installed
    if [ -d .git ] || git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
      # here wer are inside of a git repo
      GIT_BRANCH=$(git symbolic-ref --short HEAD)
      GIT_COMMIT=$(git rev-parse --short HEAD)
      # add active branch and last commit hash to the prompt
      PS1="${PS1}:(${COLOR_GITBRANCH}${GIT_COMMIT}${COLOR_PATH_ERR}|${COLOR_GITBRANCH}${GIT_BRANCH}${COLOR_DIVIDER})"
    fi
  fi
  # add conda environment to the prompt if it is active
  if ! test -z "$CONDA_DEFAULT_ENV" ; then
    PS1="${PS1}:${COLOR_VENV}${CONDA_DEFAULT_ENV}${COLOR_DIVIDER}"
  fi
  PS1="${PS1}${COLOR_DIVIDER}:${COLOR_USERNAME}\u${COLOR_USERHOSTAT}@${COLOR_HOSTNAME}\h${COLOR_DIVIDER}:${PATH_COLOR}\w${COLOR_DIVIDER}]> ${COLOR_NONE}"
}

# this is a debug lines
# trap set_bash_prompt DEBUG
# the above function should be evaluated after each command
export PROMPT_COMMAND=set_bash_prompt

